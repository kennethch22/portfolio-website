// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  verificationCode String?
  verificationExpiry DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Skills model
model Skill {
  id          String   @id @default(cuid())
  name        String   @unique
  category    String   // e.g., "Frontend", "Backend", "Data"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  projects    ProjectSkill[]
  experiences ExperienceSkill[]
}

// Projects model
model Project {
  id          String   @id @default(cuid())
  title       String
  shortDesc   String
  fullDesc    String?  @db.Text
  featured    Boolean  @default(false)
  imageUrl    String?
  demoUrl     String?
  githubUrl   String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  skills      ProjectSkill[]
}

// Junction table for Project-Skill many-to-many
model ProjectSkill {
  id        String   @id @default(cuid())
  projectId String
  skillId   String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  skill     Skill    @relation(fields: [skillId], references: [id], onDelete: Cascade)
  
  @@unique([projectId, skillId])
}

// Experiences model
model Experience {
  id        String   @id @default(cuid())
  company   String
  role      String
  shortDesc String
  fullDesc  String?  @db.Text
  startDate String
  endDate   String
  current   Boolean  @default(false)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  skills    ExperienceSkill[]
}

// Junction table for Experience-Skill many-to-many
model ExperienceSkill {
  id           String     @id @default(cuid())
  experienceId String
  skillId      String
  experience   Experience @relation(fields: [experienceId], references: [id], onDelete: Cascade)
  skill        Skill      @relation(fields: [skillId], references: [id], onDelete: Cascade)
  
  @@unique([experienceId, skillId])
}

// Organisations model
model Organisation {
  id        String   @id @default(cuid())
  name      String
  role      String
  shortDesc String
  fullDesc  String?  @db.Text
  startDate String
  endDate   String?
  current   Boolean  @default(false)
  imageUrl  String?
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}